{"version":3,"sources":["webpack://library-project/./src/js/book.js","webpack://library-project/./src/js/storage.js","webpack://library-project/./src/js/library.js","webpack://library-project/./src/index.js","webpack://library-project/./src/js/ui.js"],"names":["title","author","pages","read","this","NAME","getLibrary","item","localStorage","getItem","JSON","parse","reviver","setLibrary","libraryArray","setItem","stringify","replacer","key","value","__type__","Book","testLibrary","library","storage","type","window","x","removeItem","e","DOMException","code","name","length","storageAvailable","fetchedLibrary","push","index","splice","newBookButton","document","getElementById","addEventListener","handleNewBookClick","bind","formOverlay","form","createButton","handleCreateClick","cancelButton","handleCancelClick","bookTable","handleDeleteClick","handleReadClick","init","classList","remove","preventDefault","add","formData","pagesInt","newBookData","FormData","get","Number","parseInt","isNaN","undefined","addBook","updateBookTable","reset","target","contains","dataset","id","removeBook","checked","setBookReadStatus","html","getBooks","map","book","join","tBodies","innerHTML","Library"],"mappings":"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","file":"main.js","sourcesContent":["class Book {\r\n  constructor(title, author, pages, read) {\r\n    this.title = title;\r\n    this.author = author;\r\n    this.pages = pages;\r\n    this.read = read;\r\n  }\r\n\r\n  info() {\r\n    return `${this.title} by ${this.author}, ${this.pages}, ${\r\n      this.read ? \"read\" : \"not read yet\"\r\n    }`;\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import Book from \"./book\";\r\n\r\nconst NAME = \"library\";\r\n\r\nfunction storageAvailable(type) {\r\n  var storage;\r\n  try {\r\n    storage = window[type];\r\n    var x = \"__storage_test__\";\r\n    storage.setItem(x, x);\r\n    storage.removeItem(x);\r\n    return true;\r\n  } catch (e) {\r\n    return (\r\n      e instanceof DOMException &&\r\n      // everything except Firefox\r\n      (e.code === 22 ||\r\n        // Firefox\r\n        e.code === 1014 ||\r\n        // test name field too, because code might not be present\r\n        // everything except Firefox\r\n        e.name === \"QuotaExceededError\" ||\r\n        // Firefox\r\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      storage &&\r\n      storage.length !== 0\r\n    );\r\n  }\r\n}\r\n\r\nfunction getLibrary() {\r\n  const item = localStorage.getItem(NAME);\r\n  if (!item) return [];\r\n  return JSON.parse(item, reviver);\r\n}\r\n\r\nfunction setLibrary(libraryArray) {\r\n  localStorage.setItem(NAME, JSON.stringify(libraryArray, replacer));\r\n}\r\n\r\nfunction reviver(key, value) {\r\n  if (value && value.__type__ === \"Book\") {\r\n    return new Book(value.title, value.author, value.pages, value.read);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction replacer(key, value) {\r\n  if (value instanceof Book) {\r\n    return {\r\n      __type__: \"Book\",\r\n      ...value,\r\n    };\r\n  }\r\n  return value;\r\n}\r\n\r\nexport { storageAvailable, getLibrary, setLibrary };\r\n","import Book from \"./book\";\r\nimport { storageAvailable, getLibrary, setLibrary } from \"./storage\";\r\n\r\nconst testLibrary = [\r\n  new Book(\"The Lord of the Rings\", \"J.R.R. Tolkien\", 1000, false),\r\n  new Book(\"JS for Impatient Programmers\", \"Axel Rauschmayer\", 200, true),\r\n  new Book(\"Javascript Allong√© Six\", \"Reg Braithwaite\", 400, false),\r\n];\r\n\r\nclass Library {\r\n  constructor(library) {\r\n    this.library = library || testLibrary;\r\n    this.storage = storageAvailable(\"localStorage\");\r\n  }\r\n\r\n  addBook({ title, author, pages, read }) {\r\n    if (this.storage) {\r\n      const fetchedLibrary = getLibrary();\r\n      fetchedLibrary.push(new Book(title, author, pages, read));\r\n      setLibrary(fetchedLibrary);\r\n      return;\r\n    }\r\n    this.library.push(new Book(title, author, pages, read));\r\n  }\r\n\r\n  removeBook(index) {\r\n    if (this.storage) {\r\n      const fetchedLibrary = getLibrary();\r\n      fetchedLibrary.splice(index, 1);\r\n      setLibrary(fetchedLibrary);\r\n      return;\r\n    }\r\n    this.library.splice(index, 1);\r\n  }\r\n\r\n  setBookReadStatus(index, read) {\r\n    if (this.storage) {\r\n      const fetchedLibrary = getLibrary();\r\n      fetchedLibrary[index].read = read;\r\n      setLibrary(fetchedLibrary);\r\n      return;\r\n    }\r\n    this.library[index].read = read;\r\n  }\r\n\r\n  getBooks() {\r\n    if (this.storage) {\r\n      return getLibrary();\r\n    }\r\n    return this.library;\r\n  }\r\n}\r\n\r\nexport default Library;\r\n","import \"./scss/style.scss\";\r\nimport Library from \"./js/library\";\r\nimport UI from \"./js/ui\";\r\n\r\nconst library = new Library();\r\nconst ui = new UI(library);\r\n","class UI {\r\n  constructor(library) {\r\n    this.library = library;\r\n\r\n    this.newBookButton = document.getElementById(\"new-book-button\");\r\n    this.newBookButton.addEventListener(\r\n      \"click\",\r\n      this.handleNewBookClick.bind(this)\r\n    );\r\n    this.formOverlay = document.getElementById(\"form-overlay\");\r\n    this.form = document.getElementById(\"book-form\");\r\n    this.createButton = document.getElementById(\"create-button\");\r\n    this.createButton.addEventListener(\r\n      \"click\",\r\n      this.handleCreateClick.bind(this)\r\n    );\r\n    this.cancelButton = document.getElementById(\"cancel-button\");\r\n    this.cancelButton.addEventListener(\r\n      \"click\",\r\n      this.handleCancelClick.bind(this)\r\n    );\r\n    this.bookTable = document.getElementById(\"book-table\");\r\n    this.bookTable.addEventListener(\"click\", this.handleDeleteClick.bind(this));\r\n    this.bookTable.addEventListener(\"click\", this.handleReadClick.bind(this));\r\n\r\n    this.init();\r\n  }\r\n\r\n  handleNewBookClick() {\r\n    this.formOverlay.classList.remove(\"hide\");\r\n  }\r\n\r\n  handleCreateClick(e) {\r\n    e.preventDefault();\r\n    this.formOverlay.classList.add(\"hide\");\r\n    const newBookData = getBookData(new FormData(this.form));\r\n    this.library.addBook(newBookData);\r\n    this.updateBookTable();\r\n\r\n    function getBookData(formData) {\r\n      const title = formData.get(\"title\");\r\n      const author = formData.get(\"author\");\r\n      const pagesInt = Number.parseInt(formData.get(\"pages\"), 10);\r\n      const pages = !Number.isNaN(pagesInt) ? pagesInt : undefined;\r\n      const read = !!formData.get(\"read\");\r\n      return { title, author, pages, read };\r\n    }\r\n  }\r\n\r\n  handleCancelClick() {\r\n    this.form.reset();\r\n    this.formOverlay.classList.add(\"hide\");\r\n  }\r\n\r\n  handleDeleteClick(e) {\r\n    if (e.target.classList.contains(\"delete-button\")) {\r\n      const index = parseInt(e.target.dataset.id, 10);\r\n      this.library.removeBook(index);\r\n      this.updateBookTable();\r\n    }\r\n  }\r\n\r\n  handleReadClick(e) {\r\n    if (e.target.classList.contains(\"read-checkbox\")) {\r\n      const index = parseInt(e.target.dataset.id, 10);\r\n      const read = !!e.target.checked;\r\n      this.library.setBookReadStatus(index, read);\r\n      this.updateBookTable();\r\n    }\r\n  }\r\n\r\n  updateBookTable() {\r\n    const html = this.library\r\n      .getBooks()\r\n      .map(\r\n        (book, index) =>\r\n          `<tr>\r\n      <td>${book.title}</td>\r\n      <td>${book.author}</td>\r\n      <td>${!(book.pages == null) ? book.pages : \"\"}</td>\r\n      <td><input class=\"read-checkbox\" type=\"checkbox\" \r\n            data-id=\"${index}\" \r\n            ${book.read ? \"checked\" : \"\"}>\r\n      </td>\r\n      <td><button class=\"btn delete-button\" type=\"button\" data-id=\"${index}\">Delete</button></td>\r\n    </tr>`\r\n      )\r\n      .join(\"\");\r\n    this.bookTable.tBodies[0].innerHTML = html;\r\n  }\r\n\r\n  init() {\r\n    this.updateBookTable();\r\n  }\r\n}\r\n\r\nexport default UI;\r\n"],"sourceRoot":""}